@function retina-filename($filename, $extention: '.png') {
  @return $filename + '@2x' + $extention;
}

@mixin retina-image {
  @media (-webkit-min-device-pixel-ratio: 1.3),
  (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
    @content
  }
}

@mixin background-image-2x($filename, $width, $height, $extention: '.png') {
  background-repeat: no-repeat;
  @include background-image(url(../images/#{$filename}#{$extention}));
  @include background-size($width $height);
  @include retina-image {
    @include background-image(url(../images/#{retina-filename($filename, $extention)}));
  }
}

@mixin gradient-hr($wing_width: 300px, $color: #eff2f4) {
  background: $color;
  height: 1px;
  position: relative;
  width: 100%;
  &:after,
  &:before {
    content: '';
    display: block;
    height: 1px;
    position: absolute;
      top: 0;
    width: $wing_width;
  }
  &:before {
    @include v-gradient(rgba(255, 255, 255, 0), $color, to right);
    left: -$wing_width;
  }
  &:after {
    @include v-gradient($color, rgba(255, 255, 255, 0), to right);
    right: -$wing_width;
  }
}

@mixin v-gradient($start-color, $end-color, $orientation: vertical) {
  $experimental-support-for-svg: true;
  @if $orientation == vertical {
    @include background-image(linear-gradient($start-color, $end-color));
  } @else {
    @include background-image(linear-gradient($orientation, $start-color, $end-color));
  }
  .oldie & {
    @include filter-gradient($start-color, $end-color, $orientation);
  }
}

@mixin media-max-width($width) {
  @media (max-width: $width) {
    @content
  }
}

@mixin breakpoint-tablet {
  @include media-max-width(991px) {
    @content
  }
}

@mixin breakpoint-phone {
  @include media-max-width(767px) {
    @content
  }
}